# Copyright (c) 2020, Michael P. Howard
# Copyright (c) 2021, Auburn University
# This file is released under the Modified BSD License.

include(CheckLanguage)
check_language(CUDA)
if(NOT CMAKE_CUDA_COMPILER)
    message(STATUS "No CUDA compiler, skipping CUDA tests.")
    return()
else()
    enable_language(CUDA)
endif()

add_executable(test_hipper_cuda ${HIPPER_TEST_FILES})
target_link_libraries(test_hipper_cuda PRIVATE hipper::hipper Catch2::Catch2)
target_compile_definitions(test_hipper_cuda PRIVATE HIPPER_CUDA)

# set cuda architectures for build
if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.18)
    set_property(TARGET test_hipper_cuda PROPERTY CUDA_ARCHITECTURES 60-real 70)
else()
    set(CUDA_ARCHITECTURES "60;70")
    set(TEST_NVCC_OPTIONS )
    foreach(_arch ${CUDA_ARCHITECTURES})
        set(TEST_NVCC_OPTIONS "${TEST_NVCC_OPTIONS} -gencode=arch=compute_${_arch},code=sm_${_arch}")
    endforeach()
    set(_sorted_arches ${CUDA_ARCHITECTURES})
    list(SORT _sorted_arches)
    list(REVERSE _sorted_arches)
    list(GET _sorted_arches 0 _max_arch)
    set(TEST_NVCC_OPTIONS "${TEST_NVCC_OPTIONS} -gencode=arch=compute_${_max_arch},code=compute_${_max_arch}")
    set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} ${TEST_NVCC_OPTIONS}")
endif()

foreach(label ${HIPPER_TEST_LABELS})
    add_test(NAME hipper-cuda-${label} COMMAND test_hipper_cuda "[${label}]")
endforeach()
